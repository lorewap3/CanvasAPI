// The onOpen function is executed automatically every time a Spreadsheet is opened.
// Adds the menue item 'Import Data' that will call the API.
function onOpen() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var menuEntries = [];
  // When the user selects "addMenuExample" menu, and clicks "Menu Entry 1", the function function1 is executed.
  menuEntries.push({name: "Import Data", functionName: "apiCanvas2Object"});
  ss.addMenu("Canvas", menuEntries);
  
}

function callAPI(url){
  //Call API Data and convert to json object
  //REQUIRED:
  //  url = the full api url with token encluded.
  var jsonData = UrlFetchApp.fetch(url);
  var jsonString = jsonData.getContentText();
  var jsonObject = Utilities.jsonParse(jsonString);
  return jsonObject;
}

//Find the number of the last row of data, return the first empty row
function findLastRow() {
  var rowNum = SpreadsheetApp.getActiveSheet().getLastRow();
  return rowNum +1;
}

//Find the number of the last row of data from a specific column, return the first empty row
//REQUIRED:
//  sheetNum = the sheet number to start search.
//  col = the column to find the last row in.
function findLastRowByCol(sheetNum, col) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = SpreadsheetApp.setActiveSheet(ss.getSheets()[sheetNum]);
  var rowNum = sheet.getLastRow();
  //create an array of values in the column of the max range of rows
  var rows = sheet.getRange(1, col, rowNum).getValues();
  //find the row with the last value scaling up the column starting from the last row in sheet
    for( var i = (rowNum - 1) ; i > 0; i--){
      if( rows[i][0] !== "") {
        break;
      };
    };
    return i +2;
}

function json2Sheet(arrHeaders, jsonObject, jsonLength, sheetNum, dataType, dataTypeValue, dataCallDate) {  
//This function will take the JSON object and convert it to a sheet in a spreadsheet.
//REQUIRED:
//  arrHeaders = array of the property names that are to be pulled out of the JSON object.
//               In order to get sub level properties the a single variable needs to be added to the array with the property values seperated by a period.
//               EXAMPLE: {0: "user.name", 1: "user_id", 2: "grades.current_score", 3: "grades.final_score"};
//                 Note - "user.name", the "." shows the divid of a sublevel of data in JSON.
//  jsonObject = the JSON object.
//  jsonLength = the number of records in the JSON object.
//  sheetNum = the spreadsheet sheet number where the data is to be added.
    
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var i = 0;
    //open the correct sheet for data set as active
    SpreadsheetApp.setActiveSheet(ss.getSheets()[sheetNum]);
    var sheet = SpreadsheetApp.getActiveSheet();
    //clear sheet data
    //sheet.clear();
    //var startRow = findLastRowbyCol(sheetNum,1);
    var startRow = findLastRow();
    var rowNum = startRow;
    if(rowNum == 1) rowNum=2;

  //testing data imput
  //jsonLength=1;
      //sheet.getRange(1, 1).setValue(jsonObject);
  if(jsonLength == null) jsonLength=1;
    //loop through json object setting raw data into first row
    for(i = 0; i<jsonLength; i++){
      //add the header title for the first two columns.  Every worksheet should start with 'timestamp' and 'json'
      //check to see if head is already created
      var headerCol1 = sheet.getRange(1,1).getValue();
      //if (headerCol1 !=""){
        sheet.getRange(1,1).setValue('timestamp');
        sheet.getRange(1,2).setValue('json');
        sheet.getRange(1,3).setValue(dataType);
      //}
      //add a timestamp for each row along with the json object
      if(jsonLength < 1){
      var dataCell = jsonObject[i];
      }else{
        var dataCell = jsonObject;
      }
      sheet.getRange(rowNum, 1).setValue(dataCallDate);
      sheet.getRange(rowNum, 2).setValue(dataCell);
      sheet.getRange(rowNum,3).setValue(dataTypeValue);
      
      //add one to rowNum to set next empty row
      rowNum++;
  //testing data imput
      //sheet.getRange(1, 1).setValue(jsonLength);
    }
    //loop through json object creating columns designated from the header array.
    var h=0;
    var cellRow = startRow;
    if(cellRow==0) cellRow=1;
  
  for(var key in arrHeaders){
       var keyCount = 0;
       var arrheaderKey = arrHeaders[h];
      //skip the first two columns reserved for timestamp and json
       var headerCol = h + 4;
       //Split header at "." to capture sublevel properties (i.e. grades.final_score) and count of items used to iterate over.
       var headerKey = arrheaderKey.split(".");
       keyCount = arrheaderKey.split(".").length;
       
       for(i = 0; i<jsonLength; i++){
         //check if header needs to be added
         var headerColValue = sheet.getRange(1, headerCol).getValue();
         if(jsonLength==1) jsonObject[0]=jsonObject;
         if (headerColValue != arrheaderKey){
            sheet.getRange(1, headerCol).setValue(arrheaderKey);
           //move pointer to the next row for first data records
            if(cellRow==1)cellRow++;
          }
          
          //Using the header array values can be found two levels deep, but will error out with anything deeper.
          if (keyCount == 1){
            if(typeof jsonObject[i][arrheaderKey] != "undefined"){
              var value = jsonObject[i][arrheaderKey];
            }else{
              var value = "retrieval error";
            }
          }else if (keyCount == 2){
            var key1 = headerKey[0];
            var key2 = headerKey[1];
            //check to make sure that the lead property is defined in the JSON object
            //grab value from json object
            //if((typeof jsonObject[i][key1] != "undefined") || (typeof jsonObject[i][key1][key2] != "undefined")){
            if(typeof jsonObject[i][key1] != "undefined"){
              var value = jsonObject[i][key1][key2];
            }else{
              var value = "retrieval error";
            }
          }else if (keyCount == 3){
            var key1 = headerKey[0];
            var key2 = headerKey[1];
            var key3 = headerKey[2];
            //check to make sure that the lead property is defined in the JSON object
            //grab value from json object
            //if((typeof jsonObject[i][key1] != "undefined") || (typeof jsonObject[i][key1][key2] != "undefined") || (typeof jsonObject[i][key1][key2][key3] != "undefined")){  
            if(typeof jsonObject[i][key1][key2] != "undefined"){
              var value = jsonObject[i][key1][key2][key3];
            }else{
              var value = "retrieval error";
            }
         }else{
            var value = "retrieval error";
         }
         
         sheet.getRange(cellRow, headerCol).setValue(value);
         cellRow++;
       }
      //move to the next column
       h++;
      //reset row back to start and bypass the header row if needed
      cellRow = startRow;
      if(cellRow==0) cellRow=2;
      
    }

}


function apiCanvas2Object() {
//This function ties all the Canvas API functions together first collecting the API JSON data then adding data to individual sheets in a spreadsheet.
//USES: callAPI(), json2sheet()
  
  ////////////////////////////////////////////////
  //Still to do: 1. check and create sheets when not already created
  ////////////////////////////////////////////////
  
  //create a sheet with a name
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  SpreadsheetApp.setActiveSheet(ss.getSheets()[0]);
  var sheet = SpreadsheetApp.getActiveSheet();
  //var sheetName = ss.getSheets()[0];
  //sheetName.setName("credentials");
  var dataCallDate = new Date();
  
  ////////////////////////////////////////////////
  //enter date into 'credentials' worksheet
  sheet.getRange(3,3).setValue(dataCallDate);
  var dateRow = findLastRowByCol(0,3);
  sheet.getRange(dateRow,3).setValue(dataCallDate);

  ////////////////////////////////////////////////
  
  //create url parts to be combined
  var urlDomainCourse = "https://canvas.ewu.edu/api/v1/";
  
  var token = sheet.getRange(3,1).getValue();
  var courseNum =  sheet.getRange(6,1).getValue();
  var userNum = sheet.getRange(9,1).getValue();
  
  var reportNum = sheet.getRange(3,2).getValue();
  var accountNum = sheet.getRange(6,2).getValue();
  var termNum = sheet.getRange(9,2).getValue();
  ////////////////////////////////////////////////
  
  //API Canvas URL
  var enrollmentURL= urlDomainCourse + "courses/"+ courseNum + "/enrollments?access_token="+token+"&per_page=100";
  var recentURL = urlDomainCourse + "courses/"+ courseNum + "/recent_students?access_token="+token+"&per_page=100";
  var assignmentURL = urlDomainCourse + "courses/"+ courseNum + "/analytics/assignments?access_token="+token+"&per_page=100";
  var discussionURL = urlDomainCourse + "";
  //var reportsURL = urlDomainCourse + "accounts/"+ accountNum + "/analytics/terms/" + termNum + "/statistics?access_token="+token;
  var reportsURL = urlDomainCourse + "accounts/"+ accountNum + "/analytics/terms/" + termNum + "/statistics?access_token="+token;
  var sub
  
  //if(userNum != "") var userURL = "https://canvas.ewu.edu/api/v1/users/3398609/enrollments?access_token="+token;
  //if(userNum != "") var userURL = "https://ewu.test.instructure.com/api/v1/users/3398609/enrollments?access_token=10~jQkUXNnTHQYaTchMZpkY5IF3ShbMA0iQRgqn7sSf2UIHA4KGTdu79quZa6DT1KYs";
  
  //create json data object
  //var jsonEnrollment = callAPI(enrollmentURL);
  //var jsonRecent = callAPI(recentURL);
  //var jsonAssignment = callAPI(assignmentURL);
  //var jsonDiscussion = callAPI(discussionURL);
  //var jsonReports = callAPI(reportsURL);
  
  
  //count records in data
  //var enrollmentLength = jsonEnrollment.length;
  //var recentLength = jsonRecent.length;
  //var assignmentLength = jsonAssignment.length;
  //var discussionLength = jsonDiscussion.length;
  //var reportsLength = jsonReports.length;
  
  //set sheet headers
  //set active sheet to 'arrKeys' worksheet to aquire json keys
  SpreadsheetApp.setActiveSheet(ss.getSheets()[1]);
  sheet = SpreadsheetApp.getActiveSheet();
  
  //var enrollmentHeaders = sheet.getRange(2,2).getValue();
  //var recentHeaders = sheet.getRange(3,2).getValue();
  //var assignmentHeaders = sheet.getRange(4,2).getValue();
  //if(userNum != "")var userHeaders = sheet.getRange(5,2).getValue();
  
  
  var enrollmentHeaders = {0: "user.name", 1: "user_id", 2: "grades.current_score", 3: "grades.final_score"};
  var recentHeaders = {0: "name", 1: "id", 2: "last_login"};
  var assignmentHeaders = {0: "assignment_id", 1: "title", 2: "points_possible", 3: "min_score", 4: "median", 5: "max_score", 6: "tardiness_breakdown.missing", 7: "tardiness_breakdown.late", 8: "tardiness_breakdown.on_time"};
  var userHeaders = {0: "type", 1: "course_id", 2: "course_section_id"};
  var discussionHeaders = {0: "type", 1: "course_id", 2: "course_section_id"};
  //var reportsHeaders = {0: "courses", 1: "teachers", 2: "students", 3: "discussion_topics", 4: "discussion_replies", 5: "media_objects", 6: "attachments", 7: "assignments", 8: "submissions"};
  //var reportsHeaders = {0: "by_category.courses", 1: "by_category.teachers", 2: "by_category.students", 3: "by_category.discussion_topics", 4: "by_category.media_objects", 5: "by_category.attachments", 6: "by_category.assignments"};
  var reportsHeaders = {0: "media_objects", 1: "students", 2: "courses", 3: "attachments", 4: "assignments", 5: "discussion_topics", 6: "teachers"};
  
  //populate sheet with json data run json2Sheet function
  if(reportNum == 1){
    //create json data object
    var jsonEnrollment = callAPI(enrollmentURL);
    var jsonRecent = callAPI(recentURL);
    var jsonAssignment = callAPI(assignmentURL);
      //count records in data
  var enrollmentLength = jsonEnrollment.length;
  var recentLength = jsonRecent.length;
  var assignmentLength = jsonAssignment.length;
    
    json2Sheet(enrollmentHeaders, jsonEnrollment, enrollmentLength, 3, 'courseid', courseNum, dataCallDate);
    json2Sheet(recentHeaders, jsonRecent, recentLength, 4, 'courseid', courseNum, dataCallDate);
    json2Sheet(assignmentHeaders, jsonAssignment, assignmentLength, 5, 'courseid', courseNum, dataCallDate);
    var userURL;
    var jsonUser;
    var userLength;
    if(userNum != "") for(var i; i<10; i++){
      userURL = "https://canvas.ewu.edu/api/v1/users/"+userNum+"/enrollments?access_token="+token+"&page="+i+"&per_page=50"
      jsonUser = callAPI(userURL);
      userLength = jsonUser.length;
      json2Sheet(userHeaders, jsonUser, userLength, 6, 'userid', userNum);
    }
  }else if(reportNum==2){
    //create json data object
    var jsonDiscussion = callAPI(discussionURL);
    //count records in data
    var discussionLength = jsonDiscussion.length;
    
    json2Sheet(discussionHeaders, jsonDiscussion, discussionLength, 7, 'courseid', courseNum, dataCallDate);
  
  }else if(reportNum==3){
    //create json data object
    var jsonReports = callAPI(reportsURL);
    //count records in data
    var reportsLength = jsonReports.length;
    var accountTermNum = accountNum+"-"+termNum;
    json2Sheet(reportsHeaders, jsonReports, reportsLength, 8, 'account-term', accountTermNum, dataCallDate);
  }
}

